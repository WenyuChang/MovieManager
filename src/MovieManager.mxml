<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication xmlns:mx="http://www.adobe.com/2006/mxml"
						layout="absolute"
						creationComplete="creationCompleteHandler(event)">
	<mx:Style source="css/style.css" />
	<mx:Script>
		<![CDATA[
			import com.as3xls.xls.ExcelFile;
			import com.as3xls.xls.Sheet;
			
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.controls.Alert;
			import mx.events.FlexEvent;

			[Bindable]
			var dgArr:ArrayCollection = new ArrayCollection();
			[Bindable]
			var curDgArr:ArrayCollection = new ArrayCollection();
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				//Read Exist Excel File
				ReadExcelFile(filePath.text);
			}
			
			private function ReadExcelFile(filePath:String):void
			{
				try
				{
					var file:File = new File(File.applicationDirectory.resolvePath(filePath).nativePath);
					var stream:FileStream = new FileStream();
					stream.open(file,FileMode.READ);
					var ba:ByteArray = new ByteArray();
					stream.readBytes(ba);
					stream.close();
					
					var xlsFile:ExcelFile = new ExcelFile();
					xlsFile.loadFromByteArray(ba);
					
					var sheet:Sheet = xlsFile.sheets[0];
					var rownow:int = sheet.rows;
					
					for(var i:int=1;i<sheet.rows;i++)
					{
						var obj:Object = new Object();
						obj.id = sheet.getCell(i,0).value;
						obj.time = sheet.getCell(i,1).value;
						obj.name = sheet.getCell(i,2).value;
						obj.searchData = sheet.getCell(i,0).value + " " + sheet.getCell(i,1).value;
						dgArr.addItem(obj);
						curDgArr.addItem(obj);
					}
					/*
					sheet.setCell(rownow,0,"新的数据");
					var nba:ByteArray = xls.saveToByteArray();
					var nstream:FileStream = new FileStream();
					nstream.open(file,FileMode.WRITE);
					nstream.writeBytes(nba);
					nstream.close();
					*/
				}
				catch(error:Error)
				{
					curDgArr.removeAll();
					dgArr.removeAll();
					Alert.show("No Such File!!");
					return;
				}
			}

			private function newMovieHandle(event:Event):void
			{
				Alert.show("New Movie");
			}
			
			private function exportHandle(event:Event):void
			{
				if(dgArr.length>0)
				{
					var sort:Sort = new Sort();
					sort.fields = [new SortField("name",true,true)];
					dgArr.sort = sort;
					dgArr.refresh();
					
					var excelFile:ExcelFile = new ExcelFile(); 
					var sheet:Sheet = new Sheet();
					sheet.resize(dgArr.length+1, 3);
					
					sheet.setCell(0, 0, "ID");
					sheet.setCell(0, 1, "时间");
					sheet.setCell(0, 2, "Name");
					
					for(var i:int=0; i<dgArr.length; i++)
					{
						//sheet.setCell(i+1, 0, i+1);
						//sheet.setCell(i+1, 1, dgArr[i].time.toString());
						//sheet.setCell(i+1, 2, dgArr[i].name.toString());
					}
					
					excelFile.sheets.addItem(sheet); 
					var mbytes:ByteArray = excelFile.saveToByteArray(); 
					
					try 
					{ 
						var fr:FileReference = new FileReference(); 
						fr.save(mbytes,"movieList.xls");
					} 
					catch (error:Error) 
					{
						Alert.show("Failed to Export!");
						trace("Failed:", error.message) 
					} 
					function saveData(event:Event):void 
					{ 
						var newFile:File = event.target as File; 
						if (true) 
						{ 
							var stream:FileStream = new FileStream(); 
							stream.open(newFile, FileMode.WRITE); 
							stream.writeBytes(mbytes);
							stream.close(); 
						}
						Alert.show("Export Succeed!");
					}
				}
			}

			private function searchHandle(event:Event):void
			{
				curDgArr.removeAll();
				for(var i:int=0;i<dgArr.length;i++)
				{
					var str:String = dgArr.getItemAt(i).searchData;
					var searchArr:Array = search.text.split(" ");
					for(var j:int=0;j<searchArr.length;j++)
					{
						if(str.search(searchArr[j].toString())!=-1)
						{
							curDgArr.addItem(dgArr.getItemAt(i));
							break;
						}
					}
				}
			}
			
			private function configHandle(event:Event):void
			{
				ReadExcelFile(filePath.text);
			}
		]]>
	</mx:Script>
	<mx:VBox height="100%" width="100%" verticalGap="0">
		<mx:HBox width="100%" height="5%">
			<mx:HBox width="65%" height="100%" horizontalAlign="left">
				<mx:Button width="20%" height="100%" label="New" fontSize="11" fontWeight="bold"
						   click="newMovieHandle(event)"/>
				<mx:Button height="20%" label="Export" fontSize="11" fontWeight="bold" 
						   click="exportHandle(event)"/>
				<mx:TextInput id="filePath" width="40%" height="100%" text="c:\aa.xls"
							  fontWeight="bold" enabled="true" color="#FFFFFF" textAlign="left"/>
				<mx:Button height="20%" label="Config" fontSize="11" fontWeight="bold"
						   click="configHandle(event)"/>
				<mx:VRule height="100%" />
				<mx:VRule height="100%" />
			</mx:HBox>
			<mx:HBox width="35%" height="100%" horizontalAlign="right">
				<mx:TextInput id="search" width="70%" height="100%" 
							  fontWeight="bold" enabled="true" color="#FFFFFF" textAlign="left"/>
				<mx:Button height="100%" width="30%" label="Search" fontSize="10"
						   click="searchHandle(event)"/>
			</mx:HBox>
		</mx:HBox>
		<mx:DataGrid id="dg" height="95%" width="100%" dataProvider="{curDgArr}">
			<mx:columns>
				<mx:DataGridColumn headerText="Time" dataField="time"/>
				<mx:DataGridColumn headerText="Name" dataField="name"/>
				<!--
				<mx:DataGridColumn headerText="Operation"  resizable="false">
					<mx:itemRenderer>
						<mx:Component>
							<mx:Button fontSize="14" click="deleteRow(data)" label="Del" >
								<mx:Script>
									<![CDATA[
										import mx.controls.Alert;
										
										private var rowId:String;
										override public function set data(value:Object):void
										{
											super.data = value;
											rowId = value['id'];
										}
										
										function deleteRow(value:Object):void
										{
											
										}
									]]>
								</mx:Script>
							</mx:Button>
						</mx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				-->
			</mx:columns>
		</mx:DataGrid>
	</mx:VBox>
	
	
</mx:WindowedApplication>
